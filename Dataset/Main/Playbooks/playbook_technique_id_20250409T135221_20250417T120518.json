{
    "type": "playbook",
    "spec_version": "cacao-2.0",
    "id": "playbook--f3e76173-4473-41e4-8a8f-6d68cabab0e6",
    "name": "Playbook for Command Execution Incident Mitigation",
    "description": "This playbook addresses an incident where an unauthorized script was executed, leading to data exfiltration on the host-22.",
    "created_by": "identity--xyz12345-6789-4abc-de12-3456789abcdef",
    "created": "2023-11-01T12:30:00Z",
    "modified": "2023-11-01T12:45:00Z",
    "revoked": false,
    "workflow_start": "start--f3e76173-4473-41e4-8a8f-6d68cabab0e6",
    "workflow": {
        "start--f3e76173-4473-41e4-8a8f-6d68cabab0e6": {
            "on_completion": "if-condition--process-check",
            "type": "start"
        },
        "if-condition--process-check": {
            "name": "Check if malicious process exists",
            "type": "if-condition",
            "condition": "process_exists('suspicious_process')",
            "on_true": "action--kill-process",
            "on_false": "action--isolate-host"
        },
        "action--kill-process": {
            "name": "Kill malicious process",
            "description": "Terminate any malicious processes identified on the host.",
            "on_completion": "action--isolate-host",
            "type": "action",
            "commands": [
                {
                    "type": "bash",
                    "command": "pkill -f suspicious_process"
                }
            ],
            "agent": "organization--xyz"
        },
        "action--isolate-host": {
            "name": "Isolate affected host",
            "description": "Take the affected host offline to prevent further data exfiltration.",
            "on_completion": "while-condition--run-scan",
            "type": "action",
            "commands": [
                {
                    "type": "bash",
                    "command": "ifconfig host-22 down"
                }
            ],
            "agent": "organization--xyz"
        },
        "while-condition--run-scan": {
            "name": "Run malware scan until clean",
            "description": "Perform a malware scan and repeat until confirmed clean.",
            "type": "while-condition",
            "condition": "scan_result != 'clean'",
            "on_true": "action--run-malware-scan",
            "on_false": "action--change-credentials"
        },
        "action--run-malware-scan": {
            "name": "Run malware scan",
            "description": "Scan the infected path for malware.",
            "on_completion": "set-scan-result",
            "type": "action",
            "commands": [
                {
                    "type": "bash",
                    "command": "scan_result=$(clamscan --remove --recursive /path/to/infected)"
                }
            ],
            "agent": "organization--xyz"
        },
        "action--change-credentials": {
            "name": "Change credential access",
            "description": "Reset user credentials to prevent unauthorized access.",
            "on_completion": "action--notify-ir-team",
            "type": "action",
            "commands": [
                {
                    "type": "bash",
                    "command": "passwd -e user_account"
                }
            ],
            "agent": "organization--xyz"
        },
        "action--notify-ir-team": {
            "name": "Notify incident response team",
            "description": "Inform incident response team of the incident details.",
            "on_completion": "end--incident-handling-complete",
            "type": "action",
            "commands": [
                {
                    "type": "bash",
                    "command": "echo 'Incident detected on host-22' | mail -s 'Security Alert' ir_team@example.com"
                }
            ],
            "agent": "organization--xyz"
        },
        "set-scan-result": {
            "name": "Set scan result variable",
            "description": "Set the scan result based on the output of the malware scan.",
            "on_completion": "while-condition--run-scan",
            "type": "action",
            "step_variables": {
                "scan_result": {
                    "type": "string",
                    "description": "The result of the malware scan.",
                    "value": "not clean",
                    "constant": false,
                    "external": false
                }
            }
        },
        "end--incident-handling-complete": {
            "type": "end"
        }
    },
    "agent_definitions": {
        "organization--xyz": {
            "type": "organization",
            "name": "ClientOrganization"
        }
    }
}