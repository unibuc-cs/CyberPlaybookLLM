{
    "type": "playbook",
    "spec_version": "cacao-2.0",
    "id": "playbook--fbef0b2d-9c14-487e-af56-d4c614b21d19",
    "name": "Mitigation Playbook for PowerShell Script Execution Incident",
    "description": "This playbook addresses an incident involving unauthorized PowerShell script execution and payload download, leading to a system compromise.",
    "created_by": "identity--xyz",
    "created": "2023-10-14T12:00:00.000Z",
    "modified": "2023-10-14T12:15:00.000Z",
    "revoked": false,
    "workflow_start": "start--68ff21e3-ff55-41da-9af1-99d56b4fef21",
    "workflow": {
        "start--68ff21e3-ff55-41da-9af1-99d56b4fef21": {
            "on_completion": "parallel--b02671d2-b8ed-427f-a44d-3a30824b5ed1",
            "type": "start"
        },
        "parallel--b02671d2-b8ed-427f-a44d-3a30824b5ed1": {
            "name": "Execute parallel mitigations",
            "description": "Execute actions to kill malicious process, delete payload, and quarantine host",
            "type": "parallel",
            "next_steps": [
                "action--035c4c76-051c-4032-9e3e-b34d9ae2bc5a",
                "decision--fa7d1234-a8f0-4c1f-9b3e-6b7479d60e21",
                "loop--7cf4f4e9-664f-48be-a4d0-94c71392c3f4"
            ]
        },
        "action--035c4c76-051c-4032-9e3e-b34d9ae2bc5a": {
            "name": "Kill malicious process",
            "description": "Terminate the process that executed the downloaded payload.",
            "on_completion": "end--001",
            "type": "action",
            "commands": [
                {
                    "type": "bash",
                    "command": "kill -9 [malicious_process_id]"
                }
            ],
            "agent": "organization--xyz"
        },
        "decision--fa7d1234-a8f0-4c1f-9b3e-6b7479d60e21": {
            "name": "Check if file exists",
            "type": "if-condition",
            "condition": "file exists",
            "on_true": "action--fa7d1234-a8f0-4c1f-9b3e-6b7479d60e21-true",
            "on_false": "action--fa7d1234-a8f0-4c1f-9b3e-6b7479d60e21-false"
        },
        "action--fa7d1234-a8f0-4c1f-9b3e-6b7479d60e21-true": {
            "name": "Delete downloaded payload",
            "description": "Remove the malicious payload from the system.",
            "on_completion": "end--001",
            "type": "action",
            "commands": [
                {
                    "type": "bash",
                    "command": "rm /path/to/payload"
                }
            ],
            "agent": "organization--xyz"
        },
        "action--fa7d1234-a8f0-4c1f-9b3e-6b7479d60e21-false": {
            "name": "Log error for missing payload",
            "description": "Log an error if the payload file does not exist.",
            "on_completion": "end--001",
            "type": "action",
            "commands": [
                {
                    "type": "bash",
                    "command": "echo 'Error: Payload file not found' >> /var/log/security.log"
                }
            ],
            "agent": "organization--xyz"
        },
        "loop--7cf4f4e9-664f-48be-a4d0-94c71392c3f4": {
            "name": "Quarantine host until isolation confirmed",
            "description": "Continuously attempt to isolate the host until confirmed.",
            "on_completion": "loop--001",
            "type": "while-condition",
            "condition": "network isolation confirmed == false",
            "on_true": "action--7cf4f4e9-664f-48be-a4d0-94c71392c3f4"
        },
        "action--7cf4f4e9-664f-48be-a4d0-94c71392c3f4": {
            "name": "Quarantine affected host",
            "description": "Isolate the affected host from the network.",
            "on_completion": "loop--7cf4f4e9-664f-48be-a4d0-94c71392c3f4",
            "type": "action",
            "commands": [
                {
                    "type": "bash",
                    "command": "networkctl isolate host-45"
                }
            ],
            "agent": "organization--xyz"
        },
        "loop--001": {
            "name": "Run Antivirus Scan",
            "description": "Loop antivirus scan until no threats are found.",
            "on_completion": "action--33445566-7788-99aa-bbcc-ddeeff110022",
            "type": "while-condition",
            "condition": "scan results are clean == false",
            "on_true": "action--00112233-4455-6677-8899-aabbccddeeff"
        },
        "action--00112233-4455-6677-8899-aabbccddeeff": {
            "name": "Run antivirus scan",
            "description": "Perform an antivirus scan to detect any remaining threats.",
            "on_completion": "loop--001",
            "type": "action",
            "commands": [
                {
                    "type": "bash",
                    "command": "antivirus --scan /"
                }
            ],
            "agent": "organization--xyz"
        },
        "action--8899aabb-ccdd-effe-0011-223344556677": {
            "name": "Reset breached credentials",
            "description": "Reset the credentials of the affected user account.",
            "on_completion": "end--001",
            "type": "action",
            "commands": [
                {
                    "type": "bash",
                    "command": "passwd [user_account]"
                }
            ],
            "agent": "organization--xyz"
        },
        "action--33445566-7788-99aa-bbcc-ddeeff110022": {
            "name": "Implement script execution policy",
            "description": "Set PowerShell script execution policy to restricted.",
            "on_completion": "action--8899aabb-ccdd-effe-0011-223344556677",
            "type": "action",
            "commands": [
                {
                    "type": "bash",
                    "command": "Set-ExecutionPolicy Restricted -Scope LocalMachine"
                }
            ],
            "agent": "organization--xyz"
        },
        "end--001": {
            "type": "end"
        }
    },
    "agent_definitions": {
        "organization--xyz": {
            "type": "organization",
            "name": "Security Team"
        }
    }
}