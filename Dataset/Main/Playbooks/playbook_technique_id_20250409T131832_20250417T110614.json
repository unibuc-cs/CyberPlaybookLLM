{
    "type": "playbook",
    "spec_version": "cacao-2.0",
    "id": "playbook--b4e5cfe1-0d14-4186-bfce-5276a90f0237",
    "name": "Mitigation Playbook for PowerShell Script Execution Incident",
    "description": "This playbook addresses an incident where an attacker executed PowerShell commands on an internal server to extract sensitive data.",
    "created_by": "identity--xyz",
    "created": "2025-04-10T08:55:35.498Z",
    "modified": "2025-04-10T09:00:00.000Z",
    "revoked": false,
    "workflow_start": "start--f1a23a51-c12e-4a7f-aba0-dcc18ae12345",
    "workflow": {
        "start--f1a23a51-c12e-4a7f-aba0-dcc18ae12345": {
            "on_completion": "decision--check_powershell_process",
            "type": "start"
        },
        "decision--check_powershell_process": {
            "name": "Check if PowerShell process is running",
            "type": "if-condition",
            "condition": "powershell_process_running == true",
            "on_true": "action--kill_malicious_process",
            "on_false": "action--isolate_infected_host"
        },
        "action--kill_malicious_process": {
            "name": "Kill malicious PowerShell process",
            "description": "Terminate any running PowerShell processes that may be malicious.",
            "on_completion": "parallel--isolate_and_scan",
            "type": "action",
            "commands": [
                {
                    "type": "bash",
                    "command": "pkill -f 'powershell.exe'"
                }
            ],
            "agent": "organization--xyz"
        },
        "action--isolate_infected_host": {
            "name": "Isolate infected host",
            "description": "Take the infected host offline to prevent further damage.",
            "on_completion": "parallel--isolate_and_scan",
            "type": "action",
            "commands": [
                {
                    "type": "bash",
                    "command": "ifconfig eth0 down && systemctl stop networking"
                }
            ],
            "agent": "organization--xyz"
        },
        "parallel--isolate_and_scan": {
            "name": "Initiate isolation and scanning processes",
            "type": "parallel",
            "next_steps": [
                "action--perform_full_system_scan"
            ]
        },
        "action--perform_full_system_scan": {
            "name": "Perform full system scan",
            "description": "Perform a complete system scan for malware.",
            "on_completion": "while-condition--scan_until_clean",
            "type": "action",
            "commands": [
                {
                    "type": "bash",
                    "command": "run_clamav_scan.sh"
                }
            ],
            "agent": "organization--xyz"
        },
        "while-condition--scan_until_clean": {
            "name": "Repeat until scan is clean",
            "description": "Continue scanning until no threats are found.",
            "on_completion": "end--completion",
            "type": "while-condition",
            "condition": "scan_result == 'clean'",
            "on_true": "end--completion",
            "on_false": "action--perform_full_system_scan"
        },
        "end--completion": {
            "type": "end"
        }
    },
    "agent_definitions": {
        "organization--xyz": {
            "type": "organization",
            "name": "ClientOrganization"
        }
    },
    "step_variables": {
        "powershell_process_running": {
            "type": "boolean",
            "description": "Indicates if the malicious PowerShell process is running.",
            "value": "true",
            "constant": false
        },
        "scan_result": {
            "type": "string",
            "description": "Stores the result of the malware scan.",
            "value": "dirty",
            "constant": false
        }
    }
}